% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_de_neighborhoods.R
\name{find_de_neighborhoods}
\alias{find_de_neighborhoods}
\title{Find differential expression neighborhoods}
\usage{
find_de_neighborhoods(
  fit,
  de_mat = assay(fit, "DE"),
  counts = NULL,
  group_by,
  contrast,
  design = fit$design,
  random_projections = 50,
  include_complement = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{fit}{the \code{lemur_fit} generated by \code{lemur()}}

\item{de_mat}{the matrix with the differential expression values. Defaults
to an assay called \code{"DE"} that is produced by \code{lemur::test_de()}.}

\item{counts}{a count matrix with the same dimension as \code{fit}.
Optional, if provided the function calculates the pseudobulked differential
expression.}

\item{group_by}{if count is provided you need to specify how the pseudobulk
samples are formed.}

\item{contrast}{a specification which contrast to fit}

\item{design}{the design to use for the fit. Default: \code{fit$design}}

\item{random_projections}{the number of random projections to use}

\item{include_complement}{a boolean to specify if the complement to the identified
neighborhood is also returned}

\item{verbose}{Should the method print information during the fitting. Default: \code{TRUE}.}
}
\value{
a data frame with one entry per gene / neighborhood containing the name
of the neighborhood, the cell indices included in the neighborhood, the number of
cells, and the mean. If counts is not \code{NULL}, the data frame in addition contains
the output columns from \code{glmGamPoi::test_de()}
}
\description{
Find differential expression neighborhoods
}
